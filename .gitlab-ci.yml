# See https://docs.gitlab.com/ee/ci/yaml/README.html

image: node:12

services:
  - docker:dind

stages:
  - install
  - build
  - lint
  - code_formatting
  - docker

install:
  stage: install
  artifacts:
    paths:
      - node_modules
      - services/ais/node_modules
      - services/bootstrap/node_modules
      - services/database/node_modules
      - services/location/node_modules
    expire_in: 1 day
  script:
    - npm install --no-save --unsafe-perm

code_formatting:
  stage: code_formatting
  allow_failure: true
  script:
    - npm run prettier:check

build:
  stage: build
  artifacts:
    paths:
      - dist
    expire_in: 1 day
  script:
    - npm run build

lint:
  stage: lint
  allow_failure: true
  script:
    - npm run lint

docker-development-app:
  stage: docker
  image: docker:stable
  environment:
    name: develop
  only:
    - develop
  script:
    - docker build -t $CI_REGISTRY/civilmrcc/onefleet/app:development .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/civilmrcc/onefleet/app:development
    - docker logout $CI_REGISTRY

docker-development-services:
  stage: docker
  image: docker:stable
  environment:
    name: develop
  only:
    - develop
  script:
    - docker build -t $CI_REGISTRY/civilmrcc/onefleet/services:development services
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/civilmrcc/onefleet/services:development
    - docker logout $CI_REGISTRY

docker-production-app:
  stage: docker
  image: docker:stable
  environment:
    name: production
  only:
    - develop
  script:
    - docker build -t $CI_REGISTRY/civilmrcc/onefleet/app:production .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/civilmrcc/onefleet/app:production
    - docker logout $CI_REGISTRY

docker-production-services:
  stage: docker
  image: docker:stable
  environment:
    name: production
  only:
    - develop
  script:
    - docker build -t $CI_REGISTRY/civilmrcc/onefleet/services:production services
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/civilmrcc/onefleet/services:production
    - docker logout $CI_REGISTRY

deploy-prod:
  stage: deploy
  script:
    - echo "Deploy to production server"
  environment:
    name: production
  when: manual
  # TODO: Enable this before merge
  # only:
  #   - master
